<launch>

    <include file="$(find multimaster_launch)/launch/multimaster_gazebo_robot.launch">
        <!-- Alt yürür için gerken multimaster node-->
        <arg name="robot_namespace" value="rover_21_description" />
    </include>

    <!-- launch custom world if you want custom world un comment that line-->
    <include file="$(find marsyard)/launch/marsyard.launch" />

    <!-- <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="paused" value="true" />
    </include> -->

    <param name="robot_description" command="xacro --inorder $(find arm_22_gazebo_pos)/urdf/assembly.urdf.xacro" />
    <param command="$(find xacro)/xacro $(find panel_base_description)/urdf/panel_base.xacro" name="panel_description" />



    <node name="spawn_model" pkg="gazebo_ros" type="spawn_model" args="-z 1.4 -Y -1.57 -urdf -param robot_description -model arm_22_gazebo_pos" output="screen" />
    
    <!-- Spawn Panel-->
    <node args="-z 1.2 -x 5.0 -Y -1.2 -param panel_description -urdf -model panel_base" name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" />
    
    <!-- robot state publisher-->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

    <include file="$(find arm_control)/launch/arm_22_controllers_pos.launch" />
    <rosparam command="load" file="$(find rover_22_description)/config/control.yaml" />
    <node name="controller_spawner" pkg="controller_manager" type="spawner" output="screen" args="rover_joint_publisher rover_steering_controller rover_wheel_leftfront rover_wheel_rightfront rover_wheel_leftrear rover_wheel_rightrear" />
    
    <!-- launch rviz -->
    <include file="$(find arm_22_gazebo_pos)/launch/arm_rviz.launch" /> 
</launch>